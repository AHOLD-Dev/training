{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceDataset_fp2",
						"type": "DatasetReference"
					},
					"name": "SqlServerDB"
				},
				{
					"dataset": {
						"referenceName": "SqlServerTable1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DestinationDataset_fp2",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "RemoveColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "RemoveColumns2",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SqlServerDB",
				"source(output(",
				"          CustomerID as integer,",
				"          AddressID as integer,",
				"          AddressType as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"SqlServerDB select(mapColumn(",
				"          CustomerID,",
				"          NameStyle,",
				"          Title,",
				"          FirstName,",
				"          LastName,",
				"          CompanyName,",
				"          SalesPerson,",
				"          EmailAddress,",
				"          Phone,",
				"          PasswordHash,",
				"          PasswordSalt,",
				"          rowguid,",
				"          ModifiedDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveColumns1",
				"source1 select(mapColumn(",
				"          CustomerID,",
				"          AddressID,",
				"          AddressType",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveColumns2",
				"RemoveColumns1, RemoveColumns2 join(RemoveColumns1@CustomerID == RemoveColumns2@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          Column_15 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     outputAssertFailedRows: true,",
				"     assertFailure_container: 'processlogs',",
				"     partitionBy('roundRobin', 2)) ~> sink1"
			]
		}
	}
}